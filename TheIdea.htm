<HTML>

<HEAD>
   <TITLE>MicroRealities Gaming - The Idea</TITLE>
</HEAD>

<BODY BGCOLOR="black" TEXT="white">    

   <!-- If their browser doesn't support tables, then the buttons/images will wrap around - which is fine. -->
   <TABLE CELLPADDING='5' ALIGN='center'>
   <TR>
      <TD>

         <SCRIPT language="JavaScript">
         <!-- Begin
            document.write( "<A HREF='default.htm' OnMouseover=imgHome.src='Images/HomeOver.gif'" +
                            " OnMouseout=imgHome.src='Images/Home.gif'>" );
            document.write( "<IMG ID='imgHome' NAME='imgHome' BORDER='0'" +
                            " SRC='Images/Home.gif' HEIGHT='50' TITLE='HOME'></A>" );
         // End -->
         </SCRIPT>
      </TD>

      <TD ALIGN='center'>
      <TABLE>
      <TR>
      <TD>
         <A HREF='TheEngine.htm'>
            <IMG SRC='Images/btnTheEngine.gif' BORDER='0' HEIGHT='50' ALIGN='top'
             TITLE='The Engine'></A>

         <A HREF='ThePlan.htm'>
            <IMG SRC='Images/btnThePlan.gif' BORDER='0' HEIGHT='50' ALIGN='top'
             TITLE='The Plan'></A>

         <SCRIPT language="JavaScript">
         <!-- Begin
            document.write( "<IMG ID='Tip1' NAME='Tip1' BORDER='0' SRC='Images/TipOut.gif' TITLE='" +
                            "Move the mouse over any word in green for additional information.' " +
                            "OnMouseover=Tip1.src='Images/TipOver.gif' " +
                            "OnMouseout=Tip1.src='Images/TipOut.gif'></A>" );
         // End -->
         </SCRIPT>
      </TD>
      </TR>
      </TABLE>
      </TD>
   </TR>
   </TABLE>

   <TABLE WIDTH='25%' BORDER='1' BORDERCOLOR='#F1E6C6' BACKGROUND='Images/faqBackground.jpg' ALIGN='center'>
      <TR>
         <TD ALIGN='center'>
            <IMG SRC='Images/btnTheIdea.gif' BORDER='0' HEIGHT='50' ALIGN='top' TITLE='The Idea'>
         </TD>
      </TR>
   </TABLE>

   <BR><BR>
   <FONT COLOR='#F1E6D6'>
      <CENTER>
      <i>* The information on this page is technical, and not intended for the casual visitor.</i><BR>
      </CENTER>
   </FONT>
   <BR><BR>

   <TABLE WIDTH='100%' BORDER='1' BORDERCOLOR='#F1E6C6' CELLPADDING='15'>
      <TH BACKGROUND='Images/faqBackground.jpg' ALIGN='center' VALIGN='middle'>
         <FONT SIZE='+1' COLOR='#F1E6C6'>
            Virtual Reality Environments (VREs)
         </FONT>
      </TH>

      <TR>
         <TD>
            <BR>
            "Virtual Reality Environments" is a phrase meant to describe a unique MicroRealities approach.&nbsp;
            "VREs" were initially conceived to create realistic, self evolving, and persistent online (server based) 
             games.&nbsp;
            After reading the content on this page, make sure to visit 
            <A HREF='TheEngine.htm'>
               <IMG SRC='Images/btnTheEngine.gif' BORDER='0' HEIGHT='25' ALIGN='top'
                TITLE='The Engine'></A>
            page, which further details aspects of a VRE.
            <BR><BR>
            VREs are constructed from rules, objects, and ideals which are based on scientific and 'pseudo-scientific'
            principles. &nbsp;Physics, evolution, anatomy, psychology, sociology, and so on are all scientific 
             principles "stongly" modelled in a VRE.&nbsp; And areas like magic, prayer, and psionics, which are not 
             scientifically defined, are modeled after para-psychology and other pseudo-sciences.
            <BR><BR>
            The value of using scientific equations is that there are a host of existing "real world models".&nbsp; 
            In addition, by using scientific equations VREs can model evolution, economics, culture, and so on.&nbsp; 
            This approach creates a consistent and realistic experience, even when major events occur that were not 
            "planned" by the game designer.
            <BR><BR>
            A VRE goes far beyond just modeling the physicality of a world, it supports the modeling of items and 
            creatures down to their smallest parts - pictures engraved on a grain of sand and functioning internal 
            organs. &nbsp; 
            It is designed to support an <i>infinite</i> number of links and attachments.&nbsp;
            An example of a growing and limitless number of links would be a "hand", that has a couple rings on each
             finger, some images or runes tattooed upon its palm, and is in the process of picking from a stack of coins.
            <BR><BR>
            VRE maps "operate" even before any game design is applied.&nbsp; This enables the game designer to
            focus on <i>molding</i> their game into existence, not requiring them to deal with mechanical issues to 
            produce a working game.&nbsp; VREs use "basic" Newtonian physics, chemistry, resource conservation, and 
            genetics.&nbsp; Detailing these "basics", is beyond the scope of this page.
            <BR><BR>
            VREs support "adaptive demands", and so free the designer and player from "hitting a design ceiling".&nbsp;
            "Adaptive demands" are a consequence of a realistic universe, where life-forms adapt to environmental and 
            social pressures in realistic ways.&nbsp; To ensure this consequence, no artificial limits must be placed on 
            what a creature can learn, who they can know, or what they can remember.&nbsp; This allows VREs to model real 
            life-forms, and therefore "in game" families, communities, and environments are inherently consistent.
            <BR><BR>
            Lastly, a VRE must support "basic" social dynamics, psychological consequences, responsibility of action, and 
            certain economic realities.&nbsp; Detailing these "basics", is beyond the scope of this page.&nbsp; However, it 
            is important to point out that modeling what goes on in the "internal universe" called the brain, whether it 
            is instinct or learned, is vital to the beginnings of good AI (Artificial Intelligence).
         </TD>
      </TR>
   </TABLE>

   <BR><BR>

   <TABLE WIDTH='100%' BORDER='1' BORDERCOLOR='#F1E6C6' CELLPADDING='15'>
      <TH BACKGROUND='Images/faqBackground.jpg' ALIGN='center' VALIGN='middle'>
         <FONT SIZE='+1' COLOR='#F1E6C6'>
            The Communication Kernel and Client/Server Model
         </FONT>
      </TH>

      <TR>
         <TD>
            <BR>
            There are three additional parts that complete the "Virtual Reality Environment" (VRE Server):&nbsp; The 
            Communication Kernel, the Client Application, and the Relational Database.&nbsp; The VRE doesn't care what 
            Relational Database is used, and so that is entirely up to the Host of that game.  The VRE also doesn't care 
            what Client Application is used, be it a GUI (Graphical User Interface) or even some other medium of interface.
            &nbsp; The <b>only</b> requirement a VRE does have is that it use the MicroRealities Communication Kernel.
            <BR><BR>
            The Communication Kernel has been separated from the Client and Server, to ease the burden for Affiliates 
            who independently develop Client applications for VREs.&nbsp; In addition, the Client's "Operating System" (OS)
            will be transparent to the Server's OS, and so players and hosts can transport between OSes as they wish, once 
            the applications are offered on multiple platforms.  The Client and Server applications only care about the 
            structure of the data communicated, nothing more.&nbsp; 
            <BR><BR>
            This approach also allows MicroRealities to offer Client Developers the ability to focus their resources on 
            just Multimedia and Interface issues.&nbsp; The developer will know all the information it needs to construct 
            detailed 2D/3D models including textures, shapes, contact points, and so on, in real time.&nbsp; In other 
            words, the Client Developer's costs and development times can be further reduced again, because they do not 
            have to model all objects, nor do they have to worry about complex communication situations.
            <BR><BR>
            There are additional benefits reaped from this Communication Kernel and Client Server (CK/CS) model.&nbsp;  
            For example, because the Client is essentially just a "viewer" into the game, it allows the replay of "in game" 
            recorded sessions which are <i>completely</i> independent of Interface and OS.&nbsp; 
            There are other features, products, and markets available for developers and service providers to fill, that 
            become obvious once the VRE and CK/CS approach is embraced, but that is far beyond the scope of the this page.
         </TD>
      </TR>
   </TABLE>

   <BR>
   <FONT COLOR='#F1E6C6' SIZE='-1'>&copy; 2000 MicroRealities</FONT>

</BODY>

</HTML>
